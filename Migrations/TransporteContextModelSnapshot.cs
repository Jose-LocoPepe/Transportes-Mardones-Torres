// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Transportes_Mardones_Torres.Models;

#nullable disable

namespace TransportesMardonesTorres.Migrations
{
    [DbContext(typeof(TransporteContext))]
    partial class TransporteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Transportes_Mardones_Torres.Models.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigo");

                    b.Property<bool>("Disponibilidad")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("disponibilidad");

                    b.Property<int>("Kilometros")
                        .HasColumnType("int")
                        .HasColumnName("kilometros");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("patente");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Patente" }, "patente")
                        .IsUnique();

                    b.ToTable("bus", (string)null);
                });

            modelBuilder.Entity("Transportes_Mardones_Torres.Models.Chofer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido");

                    b.Property<bool>("Disponibilidad")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("disponibilidad");

                    b.Property<int>("Kilometros")
                        .HasColumnType("int")
                        .HasColumnName("kilometros");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("chofer", (string)null);
                });

            modelBuilder.Entity("Transportes_Mardones_Torres.Models.Tramo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Distancia")
                        .HasColumnType("int")
                        .HasColumnName("distancia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tramo", (string)null);
                });

            modelBuilder.Entity("Transportes_Mardones_Torres.Models.Viaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int>("IdBus")
                        .HasColumnType("int")
                        .HasColumnName("id_bus");

                    b.Property<int>("IdChofer")
                        .HasColumnType("int")
                        .HasColumnName("id_chofer");

                    b.Property<int>("IdTramo")
                        .HasColumnType("int")
                        .HasColumnName("id_tramo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdBus" }, "id_bus");

                    b.HasIndex(new[] { "IdChofer" }, "id_chofer");

                    b.HasIndex(new[] { "IdTramo" }, "id_tramo");

                    b.ToTable("viaje", (string)null);
                });

            modelBuilder.Entity("Transportes_Mardones_Torres.Models.Viaje", b =>
                {
                    b.HasOne("Transportes_Mardones_Torres.Models.Bus", "IdBusNavigation")
                        .WithMany("Viajes")
                        .HasForeignKey("IdBus")
                        .IsRequired()
                        .HasConstraintName("viaje_ibfk_1");

                    b.HasOne("Transportes_Mardones_Torres.Models.Chofer", "IdChoferNavigation")
                        .WithMany("Viajes")
                        .HasForeignKey("IdChofer")
                        .IsRequired()
                        .HasConstraintName("viaje_ibfk_2");

                    b.HasOne("Transportes_Mardones_Torres.Models.Tramo", "IdTramoNavigation")
                        .WithMany("Viajes")
                        .HasForeignKey("IdTramo")
                        .IsRequired()
                        .HasConstraintName("viaje_ibfk_3");

                    b.Navigation("IdBusNavigation");

                    b.Navigation("IdChoferNavigation");

                    b.Navigation("IdTramoNavigation");
                });

            modelBuilder.Entity("Transportes_Mardones_Torres.Models.Bus", b =>
                {
                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("Transportes_Mardones_Torres.Models.Chofer", b =>
                {
                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("Transportes_Mardones_Torres.Models.Tramo", b =>
                {
                    b.Navigation("Viajes");
                });
#pragma warning restore 612, 618
        }
    }
}
